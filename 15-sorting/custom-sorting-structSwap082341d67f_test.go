// Test generated by RoostGPT for test test-04-07-1 using AI Model vertex

package main

import (
	"fmt"
	"sort"
	"testing"
)

// UsersByAge is a type that implements the sort.Interface
type UsersByAge []User

// Len is part of the sort.Interface
func (u UsersByAge) Len() int {
	return len(u)
}

// Less is part of the sort.Interface
func (u UsersByAge) Less(i, j int) bool {
	return u[i].Age < u[j].Age
}

// Swap is part of the sort.Interface
func (u UsersByAge) Swap(i, j int) {
	u[i], u[j] = u[j], u[i]
}

// TestSwap082341d67f is a test case for the Swap method
func TestSwap082341d67f(t *testing.T) {
	// Create a slice of users
	users := []User{
		{Age: 10},
		{Age: 20},
		{Age: 30},
	}

	// Sort the slice by age
	sort.Sort(UsersByAge(users))

	// Verify that the slice is sorted correctly
	if users[0].Age != 10 {
		t.Error("Expected the first user to have an age of 10, but it was", users[0].Age)
	}
	if users[1].Age != 20 {
		t.Error("Expected the second user to have an age of 20, but it was", users[1].Age)
	}
	if users[2].Age != 30 {
		t.Error("Expected the third user to have an age of 30, but it was", users[2].Age)
	}
}

// User is a struct that represents a user
type User struct {
	Age int
}
